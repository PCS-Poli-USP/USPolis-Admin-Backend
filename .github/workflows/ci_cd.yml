name: CI/CD

on: [push, pull_request]
  # push:
  #   branches:
  #     - main

jobs:
  ci:
    name: Backend Continuous Integration 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Create and activate virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          python3 -m pip install -e .
          python3 -m pip install -e .[dev]

      # - name: Run Tests
      #   run: |
      #     source venv/bin/activate
      #     pytest


  cd:
    name: Continuous Delivery
    runs-on: ubuntu-latest

    needs: ci

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSCODE }}
          port: ${{ secrets.SSH_PORT }}
          script: whoami

      # - name: Run remote command via SSH
      #   uses: D3rHase/ssh-command-action@latest
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     port: ${{ secrets.SSH_PORT }}
      #     user: ${{ secrets.SSH_USER }}
      #     private_key: ${{ secrets.SSH_PASSCODE }}
      #     command: echo 'Hello, World!'

      - name: Notify Command Success
        run: echo "Command executed on ${{ secrets.HOST }} successfully!"
# - name: Connect to USP Server Machine 
#   run: |
#     ssh ubuntu@200.144.244.245 -p 2222
#     ${{ secrets.SSH_PASSCODE }}
#     cd /diskb/home/backend
# source venv/bin/activate
# git pull
# alembic upgrade heads




  #     - name: Cache node modules
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cache/yarn # Cache para Yarn
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-

  #     - name: Instalar dependÃªncias com Yarn
  #       run: yarn install --frozen-lockfile

  #     - name: Setup Expo and EAS
  #       uses: expo/expo-github-action@v8
  #       with:
  #         eas-version: latest
  #         packager: yarn
  #         token: ${{ secrets.EAS_EXPO_TOKEN }}

  #     - name: Build
  #       run: EXPO_APPLE_APP_SPECIFIC_PASSWORD=${{ secrets.EAS_APPLE_APP_SPECIFIC_PASSWORD }} eas build --platform all --profile production --non-interactive --auto-submit-with-profile=preview --no-wait
